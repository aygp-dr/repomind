{
  "openapi": "3.0.0",
  "info": {
    "title": "Ollama API for RepoMind",
    "version": "1.0.0",
    "description": "Ollama LLM API specification"
  },
  "servers": [
    {
      "url": "http://localhost:11434",
      "description": "Local Ollama server"
    }
  ],
  "paths": {
    "/api/generate": {
      "post": {
        "summary": "Generate completion",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Streaming response",
            "content": {
              "application/x-ndjson": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/chat": {
      "post": {
        "summary": "Chat completion with tools",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat response with potential tool calls"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "GenerateRequest": {
        "type": "object",
        "required": ["model", "prompt"],
        "properties": {
          "model": {
            "type": "string",
            "example": "llama3.2"
          },
          "prompt": {
            "type": "string"
          },
          "format": {
            "type": "string",
            "enum": ["json"],
            "description": "Force JSON output"
          },
          "options": {
            "type": "object",
            "properties": {
              "temperature": {
                "type": "number"
              },
              "top_p": {
                "type": "number"
              }
            }
          }
        }
      },
      "GenerateResponse": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string"
          },
          "response": {
            "type": "string"
          },
          "done": {
            "type": "boolean"
          },
          "total_duration": {
            "type": "integer"
          },
          "prompt_eval_count": {
            "type": "integer"
          }
        }
      },
      "ChatRequest": {
        "type": "object",
        "required": ["model", "messages"],
        "properties": {
          "model": {
            "type": "string"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          },
          "tools": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tool"
            }
          }
        }
      },
      "Message": {
        "type": "object",
        "required": ["role", "content"],
        "properties": {
          "role": {
            "type": "string",
            "enum": ["system", "user", "assistant"]
          },
          "content": {
            "type": "string"
          }
        }
      },
      "Tool": {
        "type": "object",
        "required": ["type", "function"],
        "properties": {
          "type": {
            "type": "string",
            "enum": ["function"]
          },
          "function": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "parameters": {
                "type": "object"
              }
            }
          }
        }
      }
    }
  }
}